{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "message",
  "type": "registry:component",
  "title": "Message",
  "description": "Message bubble or chat component",
  "registryDependencies": [
    "avatar"
  ],
  "files": [
    {
      "path": "components/chatcn/message.tsx",
      "content": "\"use client\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { cn } from \"@/lib/utils\";\nimport {\n  Tooltip,\n  TooltipProvider,\n  TooltipTrigger,\n  TooltipContent,\n} from \"@/components/ui/tooltip\";\nimport { createContext, useContext } from \"react\";\n\ntype MessageProps = {\n  children: React.ReactNode;\n  className?: string;\n} & React.HTMLProps<HTMLDivElement>;\n\ntype MessageContext = {\n  disabled?: boolean;\n};\n\nconst MessageContext = createContext<MessageContext>({\n  disabled: false,\n});\n\nfunction useMessageContext() {\n  const ctx = useContext(MessageContext);\n  if (!ctx) {\n    throw Error(\"useMessageContext must be used within a Message\");\n  }\n  return ctx;\n}\n\nexport function Message({ children, className, ...props }: MessageProps) {\n  return (\n    <TooltipProvider>\n      <MessageContext.Provider value={{ disabled: false }}>\n        <div className={cn(\"flex gap-3 items-center\", className)} {...props}>\n          {children}\n        </div>\n      </MessageContext.Provider>\n    </TooltipProvider>\n  );\n}\n\ntype MessageAvatarProps = {\n  src: string;\n  alt: string;\n  fallback?: string;\n  className?: string;\n};\nexport function MessageAvatar({ src, alt, className }: MessageAvatarProps) {\n  return (\n    <Avatar className={cn(\"h-8 w-8\", className)}>\n      <AvatarImage src={src} alt={alt} />\n      <AvatarFallback>{alt}</AvatarFallback>\n    </Avatar>\n  );\n}\n\ntype MessageContentProps = {\n  className?: string;\n  children: React.ReactNode;\n} & React.HTMLProps<HTMLDivElement>;\n\nexport function MessageContent({ children, className }: MessageContentProps) {\n  return (\n    <div\n      className={cn(\n        \"rounded-lg p-2 text-foreground bg-secondary break-words whitespace-normal\",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\ntype MessageActionsProps = React.HTMLAttributes<HTMLDivElement>;\n\nexport function MessageActions({\n  children,\n  className,\n  ...props\n}: MessageActionsProps) {\n  return (\n    <div className={cn(\"flex items-center gap-2\", className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\ntype MessageActionProps = {\n  className?: string;\n  tooltip: React.ReactNode;\n  children: React.ReactNode;\n  side?: \"top\" | \"bottom\" | \"left\" | \"right\";\n} & React.ComponentProps<typeof Tooltip>;\n\nexport function MessageAction({\n  className,\n  tooltip,\n  children,\n  ...props\n}: MessageActionProps) {\n  const { disabled } = useMessageContext();\n  return (\n    <Tooltip {...props}>\n      <TooltipTrigger\n        asChild\n        disabled={disabled}\n        onClick={(event) => event.stopPropagation()}\n      >\n        {children}\n      </TooltipTrigger>\n      <TooltipContent className={className}>{tooltip}</TooltipContent>\n    </Tooltip>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}